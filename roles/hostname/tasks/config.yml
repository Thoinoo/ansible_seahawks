---
- name: Vérifier le nom d'hôte actuel
  ansible.builtin.command:
    cmd: hostname
  register: current_hostname

- name: Modifier le fichier /etc/hostname (si nécessaire)
  ansible.builtin.lineinfile:
    path: /etc/hostname
    line: "{{ item.name }}"
    create: yes
  when: ansible_host == item.ip and current_hostname.stdout != item.name
  loop: "{{ hostnames }}"

- name: Modifier le fichier /etc/hosts pour le nouveau nom d'hôte (si nécessaire)
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.1\.1'
    line: "127.0.1.1   {{ item.name }}"
  when: ansible_host == item.ip and current_hostname.stdout != item.name
  loop: "{{ hostnames }}"

- name: Appliquer le changement du nom d'hôte (si nécessaire)
  ansible.builtin.command:
    cmd: hostnamectl set-hostname "{{ item.name }}"
  when: ansible_host == item.ip and current_hostname.stdout != item.name
  loop: "{{ hostnames }}"

- name: Redémarrer le système (si nécessaire) pour appliquer le nom d'hôte
  ansible.builtin.reboot:
    msg: "Redémarrage nécessaire pour appliquer le nom d'hôte"
    pre_reboot_delay: 0
    post_reboot_delay: 10
    reboot_timeout: 300
    test_command: whoami
  when: item.name != "localhost" and current_hostname.stdout != item.name and ansible_host == item.ip  # Redémarrer seulement si nécessaire
  loop: "{{ hostnames }}"
