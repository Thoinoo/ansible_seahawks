---
- name: Cloner un dépôt Git
  ansible.builtin.git:
    repo: 'https://github.com/Thoinoo/mspr_nester.git'   # URL du dépôt Git
    dest: "{{ api_path }}"                     # Chemin où cloner le dépôt
    clone: yes                                                 # Cloner le dépôt s'il n'existe pas
    update: yes                                                # Mettre à jour le dépôt si il existe déjà
    version: 'main'   


- name: Créer un environnement virtuel Python (si nécessaire)
  ansible.builtin.command:
    cmd: python3 -m venv {{ api_path }}/venv
  # args:
  #   creates: "{{ api_path }}/venv"

- name: Installer les dépendances Python depuis requirements.txt
  ansible.builtin.pip:
    requirements: "{{ api_path }}/requirements.txt"
    virtualenv: "{{ api_path }}/venv"

- name: copier .env
  template:
    src: .env.j2
    dest: "{{ api_path }}/.env"

### CERTS
- name: Créer le dossier nester dans /etc/ssl
  ansible.builtin.file:
    path: "/etc/ssl/nester"
    state: directory
    mode: '0755'

- name: copie du certificats crt
  ansible.builtin.copy:
    src: cert_api.crt
    dest: "/etc/ssl/nester/cert_api.crt"
    decrypt: yes
    mode: '0644'

- name: copie du certificats key
  ansible.builtin.copy:
    src: cert_api.key
    dest: "/etc/ssl/nester/cert_api.key"
    decrypt: yes
    mode: '0644'

- name: copie du certificats CA
  ansible.builtin.copy:
    src: siegeCA.crt
    dest: "/etc/ssl/siegeCA.crt"
    decrypt: yes
    mode: '0644'

### BOOT CONFIG
- name: copier fichier start.sh
  template:
    src: start_api.sh.j2
    dest: /home/ansible/start_api.sh

- name: Ajouter une tâche cron pour lancer au démarrage
  ansible.builtin.cron:
    name: "api start"
    special_time: "reboot"  # Cela fait en sorte que la tâche s'exécute au démarrage
    job: "bash /home/ansible/start_api.sh"
    user: "root" 
    state: present

- name: reboot
  reboot:
    reboot_timeout: 30
