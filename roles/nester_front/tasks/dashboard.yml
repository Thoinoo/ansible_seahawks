---
- name: Installer Git sur une machine Debian/Ubuntu
  ansible.builtin.apt:
    name: git
    state: present
    update_cache: yes


- name: Cloner un dépôt Git
  ansible.builtin.git:
    repo: 'https://github.com/Thoinoo/mspr_nester_dashboard.git'   # URL du dépôt Git
    dest: "{{ dashboard_path }}"                     # Chemin où cloner le dépôt
    clone: yes                                                 # Cloner le dépôt s'il n'existe pas
    update: yes                                                # Mettre à jour le dépôt si il existe déjà
    version: 'main'                                            # (optionnel) Choisir la branche ou le tag à cloner


- name: Vérifier si Node.js est installé
  command: node -v
  register: node_version
  failed_when: false

- name: Installer Node.js si nécessaire
  apt:
    name: nodejs
    state: present
  when: node_version.rc != 0

- name: Vérifier si npm est installé
  command: npm -v
  register: npm_version
  failed_when: false

- name: Installer npm si nécessaire
  apt:
    name: npm
    state: present
  when: npm_version.rc != 0

# - name: Se déplacer dans le répertoire du projet
#   ansible.builtin.command:
#     cmd: cd "{{ dashboard_path }}"

- name: Créer le dossier certs
  ansible.builtin.file:
    path: "{{ project_dir }}/certs"
    state: directory
    mode: '0644'

- name: Copier certificats
  ansible.builtin.copy:
    src: cert_nester.crt
    dest: "{{ project_dir }}/certs"
    decrypt: yes
    mode: '0644'

- name: Copier certificats
  ansible.builtin.copy:
    src: cert_nester.key
    dest: "{{ project_dir }}/certs"
    decrypt: yes
    mode: '0644'

- name: Installer les dépendances avec npm
  command: npm install
  args:
    chdir: "{{ project_dir }}"


### à creuser
# - name: Créer un fichier de service systemd pour l'application
#   ansible.builtin.template:
#     src: dashboard.service.j2
#     dest: /etc/systemd/system/dashboard.service
# - name: Activer et démarrer le service systemd
#   ansible.builtin.systemd:
#     name: dashboard
#     enabled: yes
#     state: restarted

- name: Changer le propriétaire et le groupe du dossier et de son contenu
  ansible.builtin.file:
    path: "{{ dashboard_path }}"
    owner: ansible
    group: ansible
    recurse: yes



- name: copie du fichier de démarrage
  ansible.builtin.template:
    src: start.sh.j2
    dest: "{{ dashboard_path }}/start.sh"

- name: Ajouter une tâche cron pour lancer au démarrage
  ansible.builtin.cron:
    name: "dashboard start"
    special_time: "reboot"  # Cela fait en sorte que la tâche s'exécute au démarrage
    job: "bash {{ dashboard_path }}/start.sh"
    user: "root" 





